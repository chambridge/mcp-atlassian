apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-atlassian
  namespace: {{NAMESPACE}}
  labels:
    app: mcp-atlassian
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-atlassian
  template:
    metadata:
      labels:
        app: mcp-atlassian
    spec:
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: mcp-atlassian
        image: {{IMAGE}}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: {{MCP_PORT}}
          protocol: TCP
        env:
        # Transport Configuration
        - name: TRANSPORT
          value: "{{TRANSPORT}}"
        - name: PORT
          value: "{{MCP_PORT}}"
        - name: HOST
          value: "0.0.0.0"

        # Operational Configuration
        - name: READ_ONLY_MODE
          value: "{{READ_ONLY_MODE}}"
        - name: MCP_VERBOSE
          value: "{{MCP_VERBOSE}}"
        - name: MCP_LOGGING_STDOUT
          value: "true"

        # Optional: Content Filtering (uncomment and configure as needed)
        # - name: CONFLUENCE_SPACES_FILTER
        #   value: "DEV,TEAM,DOC"
        # - name: JIRA_PROJECTS_FILTER
        #   value: "PROJ,DEVOPS"

        # Optional: Tool Filtering (uncomment to restrict available tools)
        # - name: ENABLED_TOOLS
        #   value: "confluence_search,jira_get_issue,jira_search"

        # Jira Authentication from secrets (Required)
        - name: JIRA_URL
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: JIRA_URL

        # Jira Authentication Method 1: API Token (Cloud)
        - name: JIRA_USERNAME
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: JIRA_USERNAME
              optional: true
        - name: JIRA_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: JIRA_API_TOKEN
              optional: true

        # Jira Authentication Method 2: Personal Access Token (Server/DC or Cloud)
        - name: JIRA_PERSONAL_TOKEN
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: JIRA_PERSONAL_TOKEN
              optional: true

        # Confluence Authentication from secrets (Optional - only if ENABLE_CONFLUENCE=true)
        - name: CONFLUENCE_URL
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: CONFLUENCE_URL
              optional: true
        - name: CONFLUENCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: CONFLUENCE_USERNAME
              optional: true
        - name: CONFLUENCE_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: CONFLUENCE_API_TOKEN
              optional: true
        - name: CONFLUENCE_PERSONAL_TOKEN
          valueFrom:
            secretKeyRef:
              name: mcp-atlassian-secrets
              key: CONFLUENCE_PERSONAL_TOKEN
              optional: true

        # Optional: OAuth Configuration (uncomment if using OAuth)
        # - name: ATLASSIAN_OAUTH_CLIENT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: mcp-atlassian-secrets
        #       key: ATLASSIAN_OAUTH_CLIENT_ID
        #       optional: true
        # - name: ATLASSIAN_OAUTH_CLIENT_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: mcp-atlassian-secrets
        #       key: ATLASSIAN_OAUTH_CLIENT_SECRET
        #       optional: true
        # - name: ATLASSIAN_OAUTH_CLOUD_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: mcp-atlassian-secrets
        #       key: ATLASSIAN_OAUTH_CLOUD_ID
        #       optional: true

        # Health and readiness probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3

        # Resource limits and requests
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL

        # Volume mounts (for OAuth token storage if needed)
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: oauth-cache
          mountPath: /home/app/.mcp-atlassian

      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: oauth-cache
        emptyDir: {}

      # Restart policy
      restartPolicy: Always
